***リポジトリの作成***

・リポジトリ作成(作業ディレクトリ内で実行)
$ git init




***ファイルの追加***

・インデックスへファイルを追加(stageする)
(.を指定することで全ファイル追加)
$ git add .

・リポジトリにコミットする(any-messagesに変更内容を記載)
$ git commit -m "any-messages"




***状況確認***

・リポジトリとワークツリーの差分をチェック
$ git diff

・リポジトリとステージの差分をチェック
$ git diff --staged

・変更ファイルを表示
$ git status




***履歴を確認***

・リポジトリの変更履歴を確認
$ git log




***元に戻す***

・ワークツリーの変更を取り消す
$ git restore <ファイル名>

・ステージに上げた変更をワークツリーに戻す
$ git restore -staged <ファイル名>




***ブランチの作成***

・ブランチの作成
$ git branch ブランチ名




***ブランチの一覧を表示***

・ブランチの一覧を表示(ローカルのみ)
$ git branch

・ブランチの一覧を表示(リモート・ローカル)
$ git branch -a




***ブランチを切り替える***

・ブランチを切り替える
$ git switch ブランチ名

・ブランチを新規作成して切り替える
$ git switch -c ブランチ名




***ブランチをマージ***
ブランチ１で変更したファイルをコミットする
↓
masterブランチに切り替え、ブランチ１をマージすることで変更が統合される。

・ブランチをマージ(ローカルのみ)
$ git merge ブランチ名

・ブランチをマージ(リモート)
$ git merge リモート名/ブランチ名




***コンフリクトが起きたときの対処***
1.ファイルの内容を修正

2.追加された記号(<,=,>)を削除




***GitHubとの通信(初期設定)***

・ユーザ名を登録(ユーザ名はGitHubで登録したものを使用する)
$ git config --global user.name "ユーザ名"

・メールアドレスを登録(メールアドレスはGitHubで登録したものを使用する)
$ git config --global user.email メールアドレス

・GitHub上でリポジトリを作成
１．WebブラウザでGitHubにアクセス
２．ローカル上で作成した同名のリポジトリをGitHub上にも作成

・リモートリポジトリをローカルに登録(リモートリポジトリのURLをoriginとして登録)
$ git remote add origin URL




***GitHubとの通信(リモートリポジトリにプッシュ)***

・リモートリポジトリに情報送信(プッシュ)
$ git push origin ブランチ名




***GitHubとの通信(リモートリポジトリからプル)***
取得した情報はローカル内のリポジトリとファイルに反映される


・リモートリポジトリから情報取得(プル)
$ git pull origin ブランチ名

・後半は省略可
$ git pull



***GitHubとの通信(リモートリポジトリからフェッチ)***
取得した情報はローカルリポジトリのみに反映される。
コンフリクトが起きたときに変更がめんどくさいので、通常はfetchで取得した後にmergeをして更新を行う。

・リモートリポジトリから情報取得(フェッチ)
$ git fetch origin




***変更内容の確認(プルリクエスト)***
プルリクエストの手順
１．mainを細心に更新
２．ブランチを作成
３．ファイル修正・コミット
４．作成したブランチからGitHubにプッシュ
５．プルリクエスト
６．プッシュした内容をコードレビューする
７．プッシュしたファイルをGitHub上でマージ